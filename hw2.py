import numpy as np

"""
[1, 1, 1, 1,
1, -1, -1, 1,
1, -1, -1, 1,
1, -1, -1, 1,
 1, 1, 1, 1] ------- 0

[-1, -1, -1, 1,
-1, -1, 1, 1,
-1, 1, -1, 1,
-1, -1, -1, 1,
-1, -1, -1, 1] ------ 1

[1, 1, 1, 1,
-1, -1, -1, 1,
-1, -1, 1, -1,
-1, 1, -1, 1,
1, 1, 1, 1] --------- 2

[1, 1, 1, 1,
-1, -1, -1, 1,
-1, -1, 1, -1,
-1, -1, -1, 1
1, 1, 1, 1] --------- 3

[1, -1, -1, 1,
[1, -1, -1, 1,
1, 1, 1, 1
-1, -1, -1, 1,
-1, -1, -1, 1] ------ 4

[1, 1, 1, 1,
1, -1, -1, -1,
1, 1, 1, 1,
-1, -1, -1, 1,
1, 1, 1, 1] -------- 5
"""

def fill_second_matrix(num_inputs, epsilon):
    m = np.empty(shape = (num_inputs, num_inputs))
    m.fill(-epsilon)
    np.fill_diagonal(m, 1)
    return m

ideal_x = np.array([[1, 1, 1, 1,
1, -1, -1, 1,
1, -1, -1, 1,
1, -1, -1, 1,
 1, 1, 1, 1],

[-1, -1, -1, 1,
-1, -1, 1, 1,
-1, 1, -1, 1,
-1, -1, -1, 1,
-1, -1, -1, 1],

[1, 1, 1, 1,
-1, -1, -1, 1,
-1, -1, 1, -1,
-1, 1, -1, 1,
1, 1, 1, 1],

[1, 1, 1, 1,
-1, -1, -1, 1,
-1, -1, 1, -1,
-1, -1, -1, 1,
1, 1, 1, 1],

[1, -1, -1, 1,
1, -1, -1, 1,
1, 1, 1, 1,
-1, -1, -1, 1,
-1, -1, -1, 1]])

my_pic = np.array([1, 1, 1, 1,
-1, -1, -1, 1,
1, 1, -1, -1,
-1, 1, 1, -1,
 1, 1, -1, 1])

num_inputs = 5
W_2 = fill_second_matrix(num_inputs, 0.001)

W = ideal_x / 2

y = W.dot(my_pic)

for i in range(1000):
    y = W_2.dot(y)
    i, j = 0, 0
    for el in y:
        if el <=0:
            y[j] = 0
            i+=1
        j+=1
    if i == len(y) - 1:
        print("found")
        i = max(y)
        break

print(list(y).index(i))

